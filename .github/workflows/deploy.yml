name: Node.js Chat Server CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install
      - run: npm test

  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install
      - run: npm run build  # Assuming a build script exists

      # Generate a unique tag based on Git commit SHA
      - name: Generate image tag
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "## Image Tag: $IMAGE_TAG"  # Print tag for debugging

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        run: |
          docker build -t ${{ secrets.DOCKER_LOGIN }}/chat-server:$IMAGE_TAG .
          docker push ${{ secrets.DOCKER_LOGIN }}/chat-server:$IMAGE_TAG

  # deploy-to-aks:
  #   needs: build-and-push-image
  #   runs-on: ubuntu-latest    
  #   steps:
  #     - name: Checkout repository with clean cache
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  
  #     - name: Azure Kubernetes set context
  #       uses: Azure/aks-set-context@v1
  #       with:
  #         creds: '${{secrets.AZURE_CREDENTIALS}}'
  #         resource-group: venture_connect
  #         cluster-name: vc_cluster
  
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         ref: chat-server
        
  #     - name: Deploy to Kubernetes cluster
  #       uses: Azure/k8s-deploy@v1
  #       with:
  #         manifests: |
  #           k8s/deployment.yml
  #           k8s/service.yml
  #         images: '${{secrets.DOCKER_LOGIN}}/chat-server'
  #         action: deploy
  #         strategy: replace
  