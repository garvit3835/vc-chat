name: Node.js Chat Server CI/CD

on:
  push:
    branches: 
      - chat-server
  pull_request:
    branches:
      - chat-server

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chat-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install
      - run: npm test

  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chat-server
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install
      - run: docker build -t garvit3835/chat-server .
      - run: docker login -u garvit3835 -p ${{ secrets.DOCKER_PASSWORD }} 
      - run: docker push garvit3835/chat-server

  deploy-to-aks:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      id-token: write     
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Use Azure Service Principal with OIDC Flow
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Set Azure AKS context
        uses: azure/aks-set-context@v1
        with:
          cluster-name: vc_cluster
          resource-group: venture_connect
      - name: Apply deployment and service changes to AKS (using dedicated service account)
        run: |
          # Replace with the actual service account name and dedicated cluster role binding YAML
          # kubectl apply -f service-account.yaml
          kubectl apply -f chat-server/k8s
  
      