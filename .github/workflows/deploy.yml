name: Node.js Chat Server CI/CD

on:
  push:
    branches: 
      - chat-server
  pull_request:
    branches:
      - chat-server

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chat-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install
      - run: npm test

  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chat-server
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.12.2
      - run: npm install

      - run: docker build -t ${{ secrets.DOCKER_LOGIN }}/chat-server .
      - run: docker login -u ${{ secrets.DOCKER_LOGIN}} -p ${{ secrets.DOCKER_PASSWORD }} 
      - run: docker push ${{ secrets.DOCKER_LOGIN }}/chat-server

  deploy-to-aks:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      id-token: write     
    steps:
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: '${{secrets.AZURE_CREDENTIALS}}'
          # Resource Group Name
          resource-group: venture_connect
          # AKS Cluster Name
          cluster-name: vc_cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:        
          # Path to the manifest files which will be used for deployment.
          manifests: |
            chat-server/k8s/deployment.yml
            chat-server/k8s/service.yml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          # images: '${{secrets.DOCKER_LOGIN}}/githubactions-aks-demo:${{github.sha}}'
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          # imagepullsecrets: docker-image-pull-secret
          # deploy/promote/reject
          action: deploy
  
      